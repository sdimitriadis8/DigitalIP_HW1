%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%
%&%                                                   %&%
%&%        Εργασία Δημητριάδη Σωκράτη Α.Μ.:359        %&%
%&%                                                   %&%
%&%    Τ.08 - ΘΕΜΑΤΑ ΨΗΦΙΑΚΗΣ ΕΠΕΞΕΡΓΑΣΙΑΣ ΕΙΚΟΝΑΣ    %&%
%&%          ΣΥΜΠΙΕΣΗ ΚΑΙ ΥΠΕΡΑΝΑΛΥΣΗ ΒΙΝΤΕΟ          %&%
%&%                                                   %&%
%&%           1Η ΠΡΟΓΡΑΜΜΑΤΙΣΤΙΚΗ ΑΣΚΗΣΗ              %&%
%&%                 ΜΕΡΟΣ 1.2                         %&%
%&%                                                   %&%
%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%&%
%--------------------------------------------------------
function [output]=mydct(f)
% Η "mydct" είναι μία (προσωπική) συνάρτηση υπολογισμού του "Διακριτού
% Μετασχηματισμού Συνημιτόνου"(DCT) για κάποια είσοδο ακολουθίας 
% f(x),x=0,1,...,N-1, μέσω του "Ταχέος Μετασχηματισμού του Fourier"(FFT).
% Εκμεταλλευόμενοι τη σχέση που συνδέει τον DCT με τον "Διακριτό 
% Μετασχηματισμό του Fourier"(DFT) και τη συνάρτηση fft του Matlab για 
% τον ταχύτερο υπολογισμό του DFT, μπορούμε να ελαττώσουμε σημαντικά την  
% πολυπλοκότητα υπολογισμού του DCT της ακολουθίας f(x). Η σχέση που 
% συνδέει τον μετασχηματισμό DC(Τ) της f(x),x=0,1,...,N-1, με τον 
% μετασχηματισμό DF(Τ) της g(x),x=0,1,...,2N-1, αποδεικνύεται ότι 
% είναι η εξής:
%
%   (1.1)   F(u) = (0.5)G(u)w(u)exp(-jπu/2N), όπου η συνάρτηση w
%
%                     /--> sqrt(1/N), για u=0
%  ορίζεται ως w(u):=|                                          
%                     \--> sqrt(2/N), διαφορετικά                 
%                  
%
% Θα κάνουμε χρήση αυτής της εξάρτησης, για να βελτιώσουμε το υπολογιστικό
% κόστος του DCT της f(x),x=0,1,...,N-1.
%% 
[~,n]=size(f); % Αρχικά, υπολογίζουμε το μέγεθος της ακολουθίας f(x)
g=zeros(1,2*n); % Αρχικοποίηση της g (Προτροπή του Matlab)
    for j=1:2*n             % Αναθέτουμε σε μία ακολουθία, g(x), διπλάσιου 
        if(j>=1 && j<=n)    % μεγέθους, την f(x) κατά τέτοιο τρόπο 
                g(j)=f(j);  % ώστε η g(x) να είναι συμμετρική
        elseif(j>=n+1 && j<=2*n)
                g(j)=f(2*n-j+1);
        end
    end

% Εντολές για αποσφαλμάτωση και εποπτεία αποτελεσμάτων: 
% (Αποσχολιάστε για να εκτελεστούν)
%    disp('Η ακολουθία g(x) είναι:'); % Προαιρετικά, εκτυπώνεται η g(x)
%    disp(g);                         % για τυχόντα επανέλεγχο
%%   
    % Υπολογίζεται ο DFT της g(x) μέσω της fft του Matlab
    fftg=fft(g);

% Εντολές για αποσφαλμάτωση και εποπτεία αποτελεσμάτων: 
% (Αποσχολιάστε για να εκτελεστούν)    
% Προαιρετικά, εκτυπώνεται ο FFT της g(x), G(u) για εποπτικούς λόγους
%   disp('Ο DFT της g(x) με υπολογισμό μέσω της fft του Matlab, είναι:');
%   disp(fftg); 
%%
% Υπολογίζεται ο IDFT της G(u) για επανέλεγχο
%    ifftg=ifft(fftg);
    
% Εντολές για αποσφαλμάτωση και εποπτεία αποτελεσμάτων: 
% (Αποσχολιάστε για να εκτελεστούν)     
% Προαιρετικά, εκτυπώνεται ο IFFT της G(u) για επανέλεγχο της g(x)
%   disp('Ο IDFT της G(u) με υπολογισμό μέσω της ifft του Matlab, είναι:');
%   disp(ifftg);
%%
    % Τέλος, μπορούμε να υπολογίσουμε όπως προαναφέραμε,
    % τον DCT της f(x) μέσω της σχέσης (1.1)(βλ. γραμμές 25-29) 
    % που τον συνδέει με τον DFT της g(x).
    dctf=zeros(1,n); % Αρχικοποίηση με μηδενικά (προτροπή της Matlab)
    for j=1:n       
        if(j==1) % Για u=0, έχουμε τον πρώτο κλάδο της w(u) και άρα...
                dctf(j)=1/2*sqrt(1/n)*fftg(j)*exp(-1i*pi*(j-1)/(2*n)); 
        else     % Για u>0, έχουμε τον δεύτερο κλάδο της w(u) και άρα...
                dctf(j)=1/2*sqrt(2/n)*fftg(j)*exp(-1i*pi*(j-1)/(2*n));
        end
    end
    output=real(dctf);

% Εντολές για αποσφαλμάτωση και εποπτεία αποτελεσμάτων: 
% (Αποσχολιάστε για να εκτελεστούν) 
% Εκτυπώνεται ο DCT της f(x) ως ζητούμενη έξοδος της μεθόδου
%   disp('Έτσι, ο DCT της f(x) μέσω του DFT της g, είναι:');

end

